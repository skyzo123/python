'''对于某个对象，如何创建他的拷贝呢？也就是说，如何创建与该对象具有相同值的另一个对象呢？'''
#q浅拷贝：对于某个对象，虽然我们创建了与某个对象具有相同值的另一个对象，但是这两个对象内部嵌套的对应子对象全都是同一个对象
#简单来说：外部进行了拷贝，内部没有进行拷贝

'''总结：一下方式得到的拷贝都是浅拷贝:以下的四种
'''
L1=[[3,6],8]
#第一种浅拷贝的方式：L2=L1[:]
#第二种浅拷贝的方式：L2=L1.copy()
#第三种浅拷贝的方式：调用内置函数：L2=list(L1)
#第四种浅拷贝的方式：调用标准库中的copy函数
import copy
L2=copy.copy(L1)
print(L2)
print("id(L1)=%s" % id(L1))
print("id(L2)=%s" % id(L2))

print("id(L1[0])=%s" % id(L1[0]))
print("id(L2[0])=%s" % id(L2[0]))

print("id(L1[1])=%s" % id(L1[1]))
print("id(L2[1])=%s" % id(L2[1]))

'''
列表对象是可变对象，整数和元组对象是不可变类型的对象
对于没有嵌套子对象的不可变对象，比如说元组，整数，浅拷贝时并不会创建另外一个对象
总结：对于没有嵌套对象的不可变对象，例如整数对象、字符串对象、元组对象等，对象不会进行拷贝，也就是说不会窗帘另外一个对象
'''

L1[0][1]=7
L1[1]=9
print(L1)
print(L2)

i=18
ic1=int(i)
print("id(i)=%s" % id(i))
print("id(ic1)=%s" % id(ic1))#并没有创建另外一个对象